{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAe,CAAEL,SAAAA,EAAUC,MAAAA,GAEjC,OAAO,IAAIK,SAAQ,SAACC,EAASC,GACvBN,GACFK,EAAQF,GAEVG,EAAOH,MAjCEI,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAKN,IAJA,IAAIC,EAAQC,OAAOH,EAAMI,cAAcf,MAAMgB,OACvCC,EAASH,OAAOH,EAAMI,cAAcE,OAAOD,OAC3CE,EAAOJ,OAAOH,EAAMI,cAAcG,KAAKF,OAEpCG,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EACrDrB,EAAcqB,EAAUN,GACrBO,MAAK,SAAAC,OAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,YAAW,WACT1B,EAAA2B,OAAOC,QAAS,uBAAuCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,SAC5DA,MAEJ0B,OAAM,SAAAL,OAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,YAAW,WACT1B,EAAA2B,OAAOI,QAAS,sBAAoCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,SACzDA,MAEPa,GAASK","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  let delay = Number(event.currentTarget.delay.value);\n  const amount = Number(event.currentTarget.amount.value);\n  const step = Number(event.currentTarget.step.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        }, delay);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const objectPromEl = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(objectPromEl);\n    }\n    reject(objectPromEl);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","objectPromEl","Promise","resolve","reject","document","querySelector","addEventListener","event","preventDefault","delay1","Number","currentTarget","value","amount","step","position1","then","param","setTimeout","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b735f20c.js.map"}